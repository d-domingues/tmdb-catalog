{"version":3,"file":"media-details.js","sourceRoot":"","sources":["../../../src/views/media-details.ts"],"names":[],"mappings":"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","sourcesContent":["import '../components/cast-scroller.js';\r\nimport '../components/loading-spinner.js';\r\nimport '../components/mark-favorite.js';\r\n\r\nimport { RouterLocation } from '@vaadin/router';\r\nimport { html, LitElement } from 'lit';\r\nimport { customElement, property, query } from 'lit/decorators.js';\r\nimport { until } from 'lit/directives/until.js';\r\n\r\nimport { getYear, isMovie, TmdbDataObj } from '../../models/tmdb-data-obj.js';\r\nimport { imgSrc } from '../directives/img-directive.js';\r\nimport { getRouter } from '../router.js';\r\nimport { getAccountStates, getDetails } from '../tmdb.api.js';\r\nimport styles from './media-details.styles.js';\r\n\r\n@customElement('media-details')\r\nexport class MediaDetails extends LitElement {\r\n  static styles = styles;\r\n\r\n  @property({ type: Object }) location: RouterLocation = getRouter().location;\r\n  @query('#cast-scroller') castScroller!: HTMLDivElement;\r\n\r\n  director = (details: TmdbDataObj) =>\r\n    details?.credits?.crew?.find(({ job }) => job === 'Director')?.name ?? '-';\r\n\r\n  productionCountries = (details: TmdbDataObj) =>\r\n    details?.production_countries?.map(p => p.name).join(', ') ?? '-';\r\n\r\n  genres = (details: TmdbDataObj) =>\r\n    details?.genres?.map(g => html`<span class=\"genre\">${g.name}</span>`);\r\n\r\n  cast = (details: TmdbDataObj) =>\r\n    details?.credits?.cast?.sort((a, b) => b.popularity - a.popularity) ?? [];\r\n\r\n  moveScroller = (to: number) =>\r\n    this.castScroller.scrollBy({ left: this.castScroller.offsetWidth * to });\r\n\r\n  runtimeInHHMM = (details: TmdbDataObj) => {\r\n    const value =\r\n      isMovie(details) &&\r\n      !Number.isNaN(details.runtime) &&\r\n      `${Math.floor(details.runtime / 60)}:${(details.runtime % 60)\r\n        ?.toString()\r\n        ?.concat('0')\r\n        ?.substr(0, 2)\r\n        ?.trim()}`;\r\n\r\n    return value ? ` | ${value}` : '';\r\n  };\r\n\r\n  certification = (details: TmdbDataObj) => {\r\n    const value =\r\n      isMovie(details) &&\r\n      `${details?.release_dates?.results\r\n        ?.find(({ iso_3166_1 }) => iso_3166_1 === 'ES')\r\n        ?.release_dates?.at(0)\r\n        ?.certification?.trim()}`;\r\n\r\n    return value ? ` | ${value}` : '';\r\n  };\r\n\r\n  share(details: TmdbDataObj) {\r\n    navigator.share({\r\n      title: 'Movie Catalog',\r\n      text: `Details for ${isMovie(details) ? details.title : details.name}`,\r\n      url: this.location.getUrl(),\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { type, id }: any = this.location?.params;\r\n\r\n    return until(\r\n      Promise.all([getDetails(type, id), getAccountStates(type, id)]).then(\r\n        ([details, { favorite }]) => html`\r\n          <div id=\"stack\">\r\n            <img id=\"backdrop-img\" src=${imgSrc(details.backdrop_path)} alt=\"\" />\r\n            <!-- TITLE -->\r\n            <span id=\"title\">\r\n              <b>${isMovie(details) ? details.title : details.name}</b>\r\n              <div>\r\n                ${getYear(details) + this.runtimeInHHMM(details) + this.certification(details)}\r\n              </div>\r\n            </span>\r\n            <!-- RATING -->\r\n            <span id=\"rating\">\r\n              <div style=\"text-align: right\">${details.vote_average}</div>\r\n              <star-rating size=\"16\" rating=${details.vote_average}></star-rating>\r\n            </span>\r\n          </div>\r\n          <div id=\"details\">\r\n            <!-- DIRECTOR -->\r\n            <div>\r\n              <h4>Director</h4>\r\n              ${this.director(details)}\r\n            </div>\r\n            <!-- COUNTRY -->\r\n            <div>\r\n              <h4>Pa√≠s</h4>\r\n              ${this.productionCountries(details)}\r\n            </div>\r\n            <!-- GENRES -->\r\n            ${this.genres(details)}\r\n            <!-- MARK FAVORITE BTN -->\r\n            <mark-favorite mediaId=${id} mediaType=${type} ?favorite=${favorite}></mark-favorite>\r\n            <img\r\n              height=\"25\"\r\n              src=\"assets/share.svg\"\r\n              alt=\"SHARE\"\r\n              @click=${this.share}\r\n              @keyup=${this.share}\r\n            />\r\n          </div>\r\n          <!-- OVERVIEW -->\r\n          <h4>Sinopsis</h4>\r\n          <span id=\"overview\">${details.overview}</span>\r\n          <!-- CAST -->\r\n          <h4>Reparto</h4>\r\n          <div style=\"display: flex\">\r\n            <button @click=${() => this.moveScroller(-1)}>&#60;</button>\r\n            <div id=\"cast-scroller\">\r\n              ${this.cast(details).map(\r\n                ({ profile_path, name, character }) => html`\r\n                  <img src=${imgSrc(profile_path, 'w92')} alt=\"\" />\r\n                  <b>${name}</b>\r\n                  <span>${character}</span>\r\n                `\r\n              )}\r\n            </div>\r\n            <button @click=${() => this.moveScroller(1)}>&#62;</button>\r\n          </div>\r\n        `\r\n      ),\r\n      html`<loading-spinner></loading-spinner>`\r\n    );\r\n  }\r\n}\r\n"]}